-----------------------------------------------------------------------------
# MODEL VALIDATION
-----------------------------------------------------------------------------
# Cero deposit and not goal: when  vma makes worth to collect?

exp_design= {'vd' : [0],
             'vma' :[i for i in range(245000, 300000, 500)],
             'MA': [0]}
experiment1 = Experiment(instance, exp_design)
df = experiment1.df_results[['vma', 'OF_value', 'income', 'Q_coll']]
df['cost'] = df['OF_value'] - df['income']
fig = px.line(df, x='vma', y=['OF_value', 'income', 'cost'])
pio.write_html(fig, file='temp.html')

# Capacity sets a limit for collection
exp_design= {'vd' : [0],
             'vma' :[i for i in range(245000, 300000, 500)],
             'MA': [0]}
experiment1 = Experiment(instance, exp_design)
df = experiment1.df_results[['vma', 'OF_value', 'income', 'Q_coll']]
fig= px.line(df, x='vma', y='Q_coll')
pio.write_html(fig, file='temp.html')

# Without capacity the model collects all the generation
exp_design= {'vd' : [0],
             'vma' :[i for i in range(20000, 5000000, 100000)],
             'MA': [0], 
             'CAP': [{1: 1000, 2: 1000, 3: 1000, 4: 1000, 5: 1000, 6:1000}]
             }
experiment1 = Experiment(instance, exp_design)
df = experiment1.df_results[['vma', 'OF_value', 'income', 'Q_coll', 'x']]
fig= px.line(df, x='vma', y='Q_coll')
pio.write_html(fig, file='temp.html')

-----------------------------------------------------------------------------
# EXPERIMENTS
-----------------------------------------------------------------------------
# Large set of runs to show importance of vd/vma ratio 
exp_design= {'te' : [0.15, 0.2, 0.3],#, [0.15, 0.20, 0.25, 0.3], #[0.30, 0.50],
             'vma' :[i for i in range(250000, 750001, 50000)],
             'vd' : [i/100 for i in range(0, 100, 1)],
             'MA' : [i/100 for i in range(10, 21, 2)]
        }

Minimum value of vma      
exp_design= {'vma' :[i for i in range(200000, 400000, 1000)],
             'vd' : [0],
             'MA' : [0.1]
        }
# Run the experiment
experiment1 = Experiment(instance, exp_design)
df1 = experiment1.df_results
fig = px.line(df1, x='vma', y='OF_value',  color='vd',
                    color_discrete_sequence = px.colors.qualitative.Dark24,
                    title = "Goal accomplishment vs ratio between deposit and material value",
                    labels = {
                        'te': 'recovery rate',
                        'vd': 'deposit/material value as fraction of vma',
                        'goal_ratio': 'goal accomplishment',
                        'MA':'recovery goal'})
pio.write_html(fig, file='temp.html')


# maxiumum relation vd and vma for excceden goal
exp_design= {'vma' :[i for i in range(1500000, 4000000, 50000)],
             'vd' : [i/100 for i in range(0, 100, 1)],
             'MA' : [0.1],
             'te' : [0.3]
        }
# Run the experiment
experiment1 = Experiment(instance, exp_design)
df1 = experiment1.df_results
fig = px.line(df1, x='vd', y='goal_ratio',  color='vma',
                    color_discrete_sequence = px.colors.qualitative.Dark24,
                    title = "Goal accomplishment vs ratio between deposit and material value",
                    labels = {
                        'te': 'recovery rate',
                        'vd': 'deposit/material value as fraction of vma',
                        'goal_ratio': 'goal accomplishment',
                        'MA':'recovery goal'})
pio.write_html(fig, file='temp.html')

exp_design= {'vma' :[i for i in range(250000, 1000000, 50000)],
             'vd' : [i/100 for i in range(0, 100, 2)],
             'MA' : [0.1],
             'te' : [0.15, 0.2, 0.3]
        }
experiment1 = Experiment(instance, exp_design)
fig = experiment1.graph_goalAchiv()#r"../output_files/Experiment1.csv")
pio.write_html(fig, file='temp.html')